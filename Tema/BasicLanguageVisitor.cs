//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:/Compiler/Tema/Tema/BasicLanguage.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BasicLanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IBasicLanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] BasicLanguageParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecl([NotNull] BasicLanguageParser.FunctionDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.globalDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalDeclaration([NotNull] BasicLanguageParser.GlobalDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] BasicLanguageParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] BasicLanguageParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] BasicLanguageParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] BasicLanguageParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] BasicLanguageParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] BasicLanguageParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] BasicLanguageParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForInit([NotNull] BasicLanguageParser.ForInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForCondition([NotNull] BasicLanguageParser.ForConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.forIncrement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForIncrement([NotNull] BasicLanguageParser.ForIncrementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] BasicLanguageParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] BasicLanguageParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] BasicLanguageParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] BasicLanguageParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.incrementExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncrementExpr([NotNull] BasicLanguageParser.IncrementExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] BasicLanguageParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] BasicLanguageParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] BasicLanguageParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BasicLanguageParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] BasicLanguageParser.TypeContext context);
}
